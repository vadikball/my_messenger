[project]
name = "my-messenger"
version = "0.8.0"
description = "Sample code for a small API that can run a whole messenger"
authors = [
    {name = "Vadim Goncharov",email = "psinahoi@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.12,<4.0"
dependencies = [
    "sqlalchemy (>=2.0.40,<3.0.0)",
    "psycopg2-binary (>=2.9.10,<3.0.0)",
    "asyncpg (>=0.30.0,<0.31.0)",
    "pydantic (>=2.11.4,<3.0.0)",
    "pydantic-settings (>=2.9.1,<3.0.0)",
    "alembic (>=1.15.2,<2.0.0)",
    "fastapi[standard] (>=0.115.12,<0.116.0)",
    "loguru (>=0.7.3,<0.8.0)",
]
license = "MIT"


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
packages = [
    { include = "app" },
    { include = "tests" },
]

[project.scripts]
populate = "app.commands.fake_data_command:add_fake_to_db"
create_json = "app.commands.fake_data_command:create_json"

[tool.poetry.group.dev.dependencies]
wemake-python-styleguide = "^1.1.0"
black = "^25.1.0"
isort = "^6.0.1"
mypy = "^1.15.0"
autoflake = "^2.3.1"
pytest = "^8.3.5"
pytest-asyncio = "^0.26.0"
asgi-lifespan = "^2.1.0"
faker = "^37.1.0"

[tool.mypy]
disallow_untyped_defs = true
strict_optional = true

[[tool.mypy.overrides]]
module = "app.db.migrations.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    "alembic.*",
    "sqlalchemy.*",
    "asyncpg.*"
]
ignore_missing_imports = true

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
src_paths = ["app", "tests"]
multi_line_output = 3
include_trailing_comma = true
line_length = 120
force_grid_wrap = 0
combine_as_imports = true
float_to_top = true

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
asyncio_default_test_loop_scope = "session"
asyncio_default_fixture_loop_scope = "session"
